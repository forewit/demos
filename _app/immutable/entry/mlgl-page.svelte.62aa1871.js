import{S as z,i as R,s as S,k as b,a as B,q as v,l as h,m as y,c as U,r as w,h as P,n as _,b as C,E as i,L as T,I as E}from"../chunks/index.fce9d48b.js";//! --------- exports -------------
let x={compute:M};//! -------------------------------
const F=1e3;async function M(g,t,...r){if(!navigator.gpu)throw Error("WebGPU not supported.");const n=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!n)throw Error("Couldn't request WebGPU adapter.");n.isFallbackAdapter&&console.warn("WebGPU is using a fallback adapter!");const a=await n.requestDevice(),c=a.createShaderModule({code:g}),l=a.createComputePipeline({layout:"auto",compute:{module:c,entryPoint:"main"}}),f=r.map(e=>({binding:e.binding,GPUBuffer:a.createBuffer({usage:e.usage,size:e.size?e.size:e.data?e.data.byteLength:F}),data:e.data})),p=f.filter(e=>!e.data).map(e=>({binding:e.binding,source:e.GPUBuffer,destination:a.createBuffer({usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST,size:e.GPUBuffer.size})})),s=a.createBindGroup({layout:l.getBindGroupLayout(0),entries:f.map(e=>({binding:e.binding,resource:{buffer:e.GPUBuffer}}))}),d=a.createCommandEncoder(),u=d.beginComputePass();u.setPipeline(l),u.setBindGroup(0,s),u.dispatchWorkgroups(t),u.end();for(const e of p)d.copyBufferToBuffer(e.source,0,e.destination,0,e.destination.size);a.queue.submit([d.finish()]);let m={};for(const e of p){await e.destination.mapAsync(GPUMapMode.READ,0,e.destination.size);const o=e.destination.getMappedRange(0,e.destination.size);m[e.binding]=new Float32Array(o.slice(0)),e.destination.unmap()}return console.log(m),m}function k(g){let t,r,n,a,c,l,f,p,s,d,u,m;return{c(){t=b("form"),r=b("input"),n=B(),a=b("label"),c=v("Enable option one"),l=B(),f=b("br"),p=B(),s=b("button"),d=v("Run"),this.h()},l(e){t=h(e,"FORM",{id:!0});var o=y(t);r=h(o,"INPUT",{type:!0,id:!0}),n=U(o),a=h(o,"LABEL",{for:!0});var G=y(a);c=w(G,"Enable option one"),G.forEach(P),l=U(o),f=h(o,"BR",{}),p=U(o),s=h(o,"BUTTON",{type:!0});var A=y(s);d=w(A,"Run"),A.forEach(P),o.forEach(P),this.h()},h(){_(r,"type","checkbox"),_(r,"id","option_1"),_(a,"for","option_1"),_(s,"type","submit"),_(t,"id","form")},m(e,o){C(e,t,o),i(t,r),i(t,n),i(t,a),i(a,c),i(t,l),i(t,f),i(t,p),i(t,s),i(s,d),u||(m=T(t,"submit",g[0]),u=!0)},p:E,i:E,o:E,d(e){e&&P(t),u=!1,m()}}}function q(g){async function t(){const r=`
@group(0) @binding(0) var<storage> input: array<f32>;
@group(0) @binding(1) var<storage, read_write> output: array<f32>;

@compute @workgroup_size(1)
fn main(@builtin(local_invocation_id) local_id : vec3<u32>) {

  output[local_id.x] = input[local_id.x];
}`;let n=new Float32Array(Array.from({length:32},(a,c)=>c));console.log(n),x.compute(r,32,{binding:0,size:32,usage:GPUBufferUsage.STORAGE,data:n},{binding:1,size:32,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC})}return[t]}class O extends z{constructor(t){super(),R(this,t,q,k,S,{})}}export{O as default};
