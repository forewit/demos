const s=location.pathname.split("/").slice(0,-1).join("/"),o=[s+"/app/immutable/entry/app.2c477c28.js",s+"/app/immutable/assets/0.f05bdba3.css",s+"/app/immutable/nodes/0.36871bcd.js",s+"/app/immutable/nodes/1.14e5c0a8.js",s+"/app/immutable/assets/10.98fccc1f.css",s+"/app/immutable/nodes/10.c73e4ce3.js",s+"/app/immutable/assets/11.8b3d67ec.css",s+"/app/immutable/nodes/11.a5c13ab2.js",s+"/app/immutable/assets/12.afd1e89e.css",s+"/app/immutable/nodes/12.439ecdfd.js",s+"/app/immutable/assets/13.789c6171.css",s+"/app/immutable/nodes/13.844e1088.js",s+"/app/immutable/assets/2.b6e8cff1.css",s+"/app/immutable/nodes/2.194ac8a0.js",s+"/app/immutable/nodes/3.e3ea81c5.js",s+"/app/immutable/nodes/4.f7d071b9.js",s+"/app/immutable/nodes/5.9b50e7f1.js",s+"/app/immutable/assets/6.493b836e.css",s+"/app/immutable/nodes/6.81b9dd60.js",s+"/app/immutable/assets/7.f6a87da4.css",s+"/app/immutable/nodes/7.1bdde9ad.js",s+"/app/immutable/assets/8.66c3e924.css",s+"/app/immutable/nodes/8.ae3edff1.js",s+"/app/immutable/assets/9.893b6632.css",s+"/app/immutable/nodes/9.7297f876.js",s+"/app/immutable/assets/Fireworks.c8075173.css",s+"/app/immutable/chunks/Fireworks.26377ac4.js",s+"/app/immutable/chunks/authStore.1279f193.js",s+"/app/immutable/chunks/index.37c1c042.js",s+"/app/immutable/chunks/index.c2e617d6.js",s+"/app/immutable/chunks/paths.b90fb1e8.js",s+"/app/immutable/chunks/singletons.1c2909fa.js",s+"/app/immutable/chunks/stores.38009aa4.js",s+"/app/immutable/entry/start.17e0bd1f.js"],l=[s+"/fonts/PoltawskiNowy.ttf",s+"/images/clear-icon.svg",s+"/images/close-icon.svg",s+"/images/copy-icon.svg",s+"/images/down-icon.svg",s+"/images/leaf.svg",s+"/images/moon.svg",s+"/images/pen-square.svg",s+"/images/pen-square_512.png",s+"/images/pen.svg",s+"/images/settings-icon.svg",s+"/images/solar-system-animation.svg",s+"/images/sun.svg",s+"/images/svg/scrollbar-down.svg",s+"/images/svg/scrollbar-up.svg",s+"/images/up-icon.svg",s+"/manifest.json",s+"/markdown/test.md",s+"/markdown/the-seasons.md"],u="1715888846308",n=`cache-${u}`,p=[...o,...l];self.addEventListener("install",e=>{async function i(){await(await caches.open(n)).addAll(p)}e.waitUntil(i())});self.addEventListener("activate",e=>{async function i(){for(const t of await caches.keys())t!==n&&await caches.delete(t)}e.waitUntil(i())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function i(){const t=new URL(e.request.url),c=await caches.open(n);if(p.includes(t.pathname)){const a=await c.match(t.pathname);if(a)return a}try{const a=await fetch(e.request);if(!(a instanceof Response))throw new Error("invalid response from fetch");return a.status===200&&c.put(e.request,a.clone()),a}catch(a){const m=await c.match(e.request);if(m)return m;throw a}}e.respondWith(i())});
