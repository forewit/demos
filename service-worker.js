const s=location.pathname.split("/").slice(0,-1).join("/"),o=[s+"/app/immutable/entry/app.eb7806b5.js",s+"/app/immutable/assets/0.f05bdba3.css",s+"/app/immutable/nodes/0.4c458de5.js",s+"/app/immutable/nodes/1.a548825e.js",s+"/app/immutable/assets/10.98fccc1f.css",s+"/app/immutable/nodes/10.45c82178.js",s+"/app/immutable/assets/11.8b3d67ec.css",s+"/app/immutable/nodes/11.6c4e77f7.js",s+"/app/immutable/assets/12.fb2b75a5.css",s+"/app/immutable/nodes/12.22c78b2a.js",s+"/app/immutable/assets/13.789c6171.css",s+"/app/immutable/nodes/13.5bbce7f2.js",s+"/app/immutable/assets/2.b6e8cff1.css",s+"/app/immutable/nodes/2.d2fcbd8c.js",s+"/app/immutable/nodes/3.57334410.js",s+"/app/immutable/nodes/4.f6efdd99.js",s+"/app/immutable/nodes/5.d4ba7f24.js",s+"/app/immutable/assets/6.493b836e.css",s+"/app/immutable/nodes/6.fc690a03.js",s+"/app/immutable/assets/7.f6a87da4.css",s+"/app/immutable/nodes/7.8cc00df5.js",s+"/app/immutable/assets/8.66c3e924.css",s+"/app/immutable/nodes/8.55bdc2b6.js",s+"/app/immutable/assets/9.893b6632.css",s+"/app/immutable/nodes/9.e028246b.js",s+"/app/immutable/assets/Fireworks.c8075173.css",s+"/app/immutable/chunks/Fireworks.dae54fb6.js",s+"/app/immutable/chunks/authStore.6d02c68c.js",s+"/app/immutable/chunks/index.10c26882.js",s+"/app/immutable/chunks/index.a7b0db33.js",s+"/app/immutable/chunks/paths.7bd921c0.js",s+"/app/immutable/chunks/singletons.bb8becc0.js",s+"/app/immutable/chunks/stores.fc158f28.js",s+"/app/immutable/entry/start.05f5a126.js"],l=[s+"/fonts/PoltawskiNowy.ttf",s+"/images/clear-icon.svg",s+"/images/close-icon.svg",s+"/images/copy-icon.svg",s+"/images/down-icon.svg",s+"/images/leaf.svg",s+"/images/moon.svg",s+"/images/pen-square.svg",s+"/images/pen-square_512.png",s+"/images/pen.svg",s+"/images/settings-icon.svg",s+"/images/solar-system-animation.svg",s+"/images/sun.svg",s+"/images/svg/cancel.svg",s+"/images/svg/down-triangle.svg",s+"/images/svg/left-triangle.svg",s+"/images/svg/plus.svg",s+"/images/svg/right-triangle.svg",s+"/images/svg/up-triangle.svg",s+"/images/up-icon.svg",s+"/manifest.json",s+"/markdown/test.md",s+"/markdown/the-seasons.md"],u="1716218066561",c=`cache-${u}`,p=[...o,...l];self.addEventListener("install",e=>{async function i(){await(await caches.open(c)).addAll(p)}e.waitUntil(i())});self.addEventListener("activate",e=>{async function i(){for(const t of await caches.keys())t!==c&&await caches.delete(t)}e.waitUntil(i())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function i(){const t=new URL(e.request.url),n=await caches.open(c);if(p.includes(t.pathname)){const a=await n.match(t.pathname);if(a)return a}try{const a=await fetch(e.request);if(!(a instanceof Response))throw new Error("invalid response from fetch");return a.status===200&&n.put(e.request,a.clone()),a}catch(a){const m=await n.match(e.request);if(m)return m;throw a}}e.respondWith(i())});
